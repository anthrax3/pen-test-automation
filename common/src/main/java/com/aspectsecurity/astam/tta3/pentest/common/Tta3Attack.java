package com.aspectsecurity.astam.tta3.pentest.common;

/*
    Application Security Threat Attack Modeling (ASTAM)

    Copyright (C) 2017 Applied Visions - http://securedecisions.com

    Written by Aspect Security - http://aspectsecurity.com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

/**
 * This class encapsulates an attack that has been normalized by TTA3. The attack may have originated from a TTA1
 * Finding or from a Potential Attack that emerged from TTA2. The goal is to make an attack transparent to the rest of
 * the pen test automation whether the attack originated from TTA1 Findings, TTA2 Potential Attacks, or (future) based
 * on TTA3 Discovery.
 *
 * @author Aspect Security
 */
public class Tta3Attack {

    protected String capecId;
    protected Map<String, String> applicationMetadata = new HashMap<String, String>();

    /**
     * Creates a new Tta3Attack object based on the given CAPEC.
     *
     * @param capecId the CAPEC associated with this attack
     */
    public Tta3Attack(String capecId) {

        this(capecId, Collections.<String, String>emptyMap());
    }

    public Tta3Attack(String capecID, Map<String, String> applicationMetadata) {
        this.capecId = capecID;
        this.applicationMetadata.putAll(applicationMetadata);
    }

    /**
     * Returns the CAPEC id for the attack derived from the original record.
     * @return the CAPEC id for the attack derived from the original record.
     */
    public String getCapecId() {
        return capecId;
    }

    public Map<String, String> getApplicationMetadata() {
        return Collections.unmodifiableMap(this.applicationMetadata);
    }

}

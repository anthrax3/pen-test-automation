package com.aspectsecurity.tta3.pentest.tools.crydra16;

import com.aspectsecurity.astam.tta3.pentest.common.ToolCommand;
import com.aspectsecurity.astam.tta3.pentest.common.Tta3Attack;
import com.aspectsecurity.astam.tta3.pentest.tools.spi.ToolParameter;

import java.util.Set;

import static org.junit.jupiter.api.Assertions.*;

/*
    Application Security Threat Attack Modeling (ASTAM)

    Copyright (C) 2017 Applied Visions - http://securedecisions.com

    Written by Aspect Security - https://aspectsecurity.com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/
class Crydra16WrapperTest  {

    Crydra16Wrapper crydra16Wrapper;

    @org.junit.jupiter.api.BeforeEach
    void setUp() {
        crydra16Wrapper = new Crydra16Wrapper();
    }

    @org.junit.jupiter.api.Test
    void getToolParameters() {
        Set<ToolParameter> toolParameters = crydra16Wrapper.getToolParameters();


    }

    @org.junit.jupiter.api.Test
    void getSupportedAttacks() {
        Set<String> supportedAttacks = crydra16Wrapper.getSupportedAttacks();

        assertTrue(supportedAttacks.contains("CAPEC-16"));

        assertFalse(supportedAttacks.contains("CAPEC-22"));

        assertFalse(supportedAttacks.contains("foobar"));
    }

    @org.junit.jupiter.api.Test
    void parseAttackResult() {

    }

    @org.junit.jupiter.api.Test
    void generateToolCommand() {

        Set<ToolParameter> toolParameters = crydra16Wrapper.getToolParameters();
        for (ToolParameter t : toolParameters) {
            switch (t.getParamName()) {
                case "loginURL":
                    t.setValue("http://example.com:8080/admin");
                    break;
                case "sqliURL":
                    t.setValue("http://example.com:8080/JSONTags?start=0&count=10&sort=tagname");
                    break;
                case "sqliParam":
                    t.setValue("sort");
                    break;
                case "sqliPOST":
                    break;
                case "loginPOST":
                    break;
            }
        }

        ToolCommand toolCommand = crydra16Wrapper.generateToolCommand(new Tta3Attack("CAPEC-16"));


        assertEquals(toolCommand.getToolExecutableName(), "crydra-16");


        String command = toolCommand.toString();

        System.out.println(toolCommand);

        assertTrue(command.contains("loginURL='http://example.com:8080/admin'"));

        assertTrue(command.contains("sqliURL='http://example.com:8080/JSONTags?start=0&count=10&sort=tagname'"));

        assertTrue(command.contains("sqliParam='sort'"));

        assertFalse(command.contains("sqliPOST"));

        assertFalse(command.contains("loginPOST"));
    }

}
package com.aspectsecurity.astam.tta3.pentest.tools.spi;

/*
    Application Security Threat Attack Modeling (ASTAM)

    Copyright (C) 2017 Applied Visions - http://securedecisions.com

    Written by Aspect Security - https://aspectsecurity.com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

import java.lang.reflect.Type;

/**
 * Encapsulates a parameter of a tool wrapper. By implementing this class, tools can specify the information needed to
 * run the wrapped tool. Note that a wrapped tool should not declare a tool parameter for every parameter the tool
 * supports - creating a tool client API is not the goal of the Tool Wrapper SPI. Instead, the ToolParameters that are
 * specified should be those parameters that the wrapper itself cannot derive from the available configuration data. By
 * specifying a tool parameter using this class, the TTA3 Pen Test Automation Platform will be able to query or prompt
 * for the appropriate information. Hence the paramName and paramDescription returned by this class should be meaningful
 * to a user.
 *
 * @author Aspect Security
 *
 * @param <T> the object type for the parameter (e.g. java.lang.String, java.net.URL, java.io.File, etc.).
 */
public interface ToolParameter<T> {

    /**
     * Returns the name of the tool wrapper parameter.
     * @return the name of the tool wrapper parameter.
     */
    public String getParamName();

    /**
     * Returns the Type for the tool wrapper parameter. This Type should match the generic type T of the ToolParameter.
     * @return the Type for the tool wrapper parameter.
     */
    public Type getParamType();

    /**
     * Returns the description of the tool wrapper parameter. This description should be meaningful to a user so they
     * are able to understand the intent of the parameter.
     *
     * @return the description of the tool wrapper parameter.
     */
    public String getParamDescription();

    /**
     * Returns whether or not this tool wrapper parameter is required.
     * @return true if this tool wrapper paremeter is required; false otherwise.
     */
    public boolean isRequired();

    /**
     * Returns whether or not the current value for this tool wrapper parameter is valid. This method is used by the
     * TTA3 Pen Test Automation platform to determine whether or not the parameter follows the desired specification
     * for the tool wrapper. It gives the tool wrapper the opportunity to apply input validation.
     *
     * @return true if the current value for this tool wrapper paremeter is valid; false otherwise.
     */
    public boolean isValid();

    /**
     * Returns the current value of this tool wrapper parameter.
     * @return the current value of this tool wrapper parameter.
     */
    public T getValue();

    /**
     * Sets the value of this tool wrapper parameter.
     * @param value the value for this tool wrapper parameter.
     */
    public void setValue(T value);

    /**
     * Attempts to construct a valid shell-script style variable line, such as `paramname='paramvalue'\n`.  This is not
     * guaranteed to produce a valid shell line and is provided only as a convenience function.  Implementors may
     * return an empty string or might even throw UnsupportedOperationException.
     * @return a line suitable for a shell script
     */
    public String generateShellConfigLine();
}
